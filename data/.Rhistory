1+1
1+2
install.packages("shiny")
？ 画图
？+ 画图
？scale_x_coutinuous
？scale_x_continuous
?scale_x_continuous
??scale_x_continuous
??scale
? 你好
install.packages(ggplot2)
install.packages("ggplot2")
install.packages('mice')
?class
?md.pattern()
install.packages('VIM')
install.packages('Boruta')
install.packages('caret')
install.packages('mlbench')
install.packages('randomForest')
install.packages('mlbench')
# libraries
library(Boruta)
library(mlbench)
library(caret)
# set path
setwd('C:/Users/Administrator/Desktop/data')
numEncode = function(data,featureName = colnames(data)){
print('start to encode')
for (feature in featureName){
# record the name of the features
names = list() # an array to store the names
# Search through the sample
for (kind in data[,feature]){
if (!(kind %in% names)){
names = c(names, kind) # add new name
}
}
# encoding data
labels = c(1:length(names)) # create label
data[,feature] = factor(data[,feature], levels = names, labels = labels)
}
# return new data
print('finish encoding')
return (data)
}
loadData = function(filename){
# input: the test results file
# output: the results as a dataframe
return (read.csv(filename))
}
data = loadData('raw_data.csv')
X = data[,-length(data)]
y = data[,length(data)]
features_name = colnames(data)
b = features_name[length(features_name)]
a = numEncode(data,featureName = b)
#print(a)
# get feature
X = a[,-length(data)]
y = a[,length(data)]
# Feature Selection
boruta = Boruta(y ~ X,data = a, doTrace = 2)
print(boruta)
plot(boruta, las = 2, cex.axis = 0.7)
# plot the figure
#plot(boruta, las = 2, cex.axis = 0.7)
plotImpHistory(boruta)
print(attStats(boruta))
# plot the figure
plot(boruta)
# plot the figure
#plot(boruta)
plot(boruta, las = 2, cex.axis = 0.7)
# plot the figure
#plot(boruta)
#plot(boruta, las = 2, cex.axis = 0.7)
plotImpHistory(boruta)
